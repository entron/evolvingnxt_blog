<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Evolving NXT (celegans)</title><link>https://entron.github.io/evolvingnxt_blog</link><description></description><atom:link rel="self" type="application/rss+xml" href="https://entron.github.io/evolvingnxt_blog/categories/celegans.xml"></atom:link><language>en</language><lastBuildDate>Wed, 03 Feb 2016 19:12:48 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>celegans project introduction</title><link>https://entron.github.io/evolvingnxt_blog/posts/201110celegans-project-introduction.html</link><dc:creator>Cheng Guo</dc:creator><description>&lt;p&gt;In the previous euglena project, I programmed some simple searching algorithm for the NXT robot to find light. With the celegans project I will go a biotic approach, more specifically I will design a neuron network to control the robot to achieve the same aim (find light) as euglena instead of programming by myself. Here programming I mean the traditional "if...then..." style programming. To design a neural network to realize certain task, generally speaking, is also programming, but I would rather call this kind programming "neuroprogramming". Neuroprogramming is different with conventional programming. It is fundamentally parallel, thus needs a very different programming paradigm. celegans could be a good model to try. The name is from "c. elegans", which is a tiny worm only 1mm long, and it is the simplest intensively-studied model organism with neural system.&lt;br&gt;&lt;br&gt;I will use 1 light sensor to detect light and two motors for the movement. Therefore at least 3 neurons are needed: 1 sensor neuron, 2 motor neurons. Are three neurons enough? I guess probably not for an efficient light finder. To find the light source the robot should know the change of light intensity. It might be necessary to include more interneurons for this function.&lt;br&gt;&lt;br&gt;During the past few months I have read quite a few papers in neural science to gain some inspiration from the real neural systems. Some of which are about c. elegans. Even though I expected for c. elegans to survive it should do something similar like finding the light I was still a bit surprised to read that the neural network the real c. elegans used could be directly applied on my NXT robot! The only difference is c.~elegans is more interested chemicals rather than light, so light intensity is replaced by chemical concentration for c. elegans. Other than this everything is almost the same. I found the following facts about c. elegans' chemotaxis:&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;It only uses 1 sensor neuron.&lt;/li&gt;&lt;li&gt;Effectively it uses 2  motor neuros to control the left and right side of the muscles.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Neurocircuits it might be using has been proposed, for example &lt;a href="http://edizquierdo.wordpress.com/2010/08/05/evolution-and-analysis-of-minimal-neural-circuits-for-klinotaxis-in-c-elegans/"&gt;Eduardo Izquierdo used a genetical algorithm to find some working minimal neural networks&lt;/a&gt; (&lt;span style="font-family: MyriadMM; font-size: 8pt;"&gt;The Journal of Neuroscience, September 29, 2010 &lt;/span&gt;&lt;span style="font-family: MyriadMM; font-size: 7pt;"&gt;• &lt;/span&gt;&lt;span style="font-family: MyriadMM; font-size: 8pt;"&gt;30(39):12908 –12917&lt;/span&gt;); I especially like &lt;a href="http://www.csi.uoregon.edu/projects/celegans/talks/nips1996poster.html"&gt;the work by T. C. Ferree et al&lt;/a&gt;. Indeed ten years ago, they have done exactly the same thing I want to do now: use the neural network to control the robot to find light! Here is their paper "&lt;a href="http://chinook.uoregon.edu/papers/ab1998.pdf"&gt;Robust spatial navigation in a robot inspired by chemotaxis in c. elegans&lt;/a&gt;". Therefore as the first step I will simply repeat their work based on NXTCamel. The photo below is their modeling of the car from the paper. NXTCamel is designed to have a equivalent  driving system as their model.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-uSCxIKA96co/TqF1YqDOWJI/AAAAAAAAAB0/kb4yfNL8bYI/s1600/Screen+Shot+2011-10-21+at+3.34.00+PM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="320" src="http://4.bp.blogspot.com/-uSCxIKA96co/TqF1YqDOWJI/AAAAAAAAAB0/kb4yfNL8bYI/s320/Screen+Shot+2011-10-21+at+3.34.00+PM.png" width="280"&gt;&lt;/a&gt;&lt;/div&gt;</description><category>celegans</category><guid>https://entron.github.io/evolvingnxt_blog/posts/201110celegans-project-introduction.html</guid><pubDate>Fri, 21 Oct 2011 14:28:00 GMT</pubDate></item></channel></rss>